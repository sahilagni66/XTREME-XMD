const config = require('../config')
const { cmd, commands } = require('../command')
const { getBuffer, getGroupAdmins, getRandom, h2k, isUrl, Json, runtime, sleep, fetchJson} = require('../lib/functions')

cmd({
    pattern: "tagall",
    react: "üìë",
    alias: ["gc_tagall"],
    desc: "To Tag all Members",
    category: "group",
    use: '.tagall [message]',
    filename: __filename
},
async (conn, mek, m, { from, participants, reply, isGroup, senderNumber, groupAdmins, prefix, command, args, body }) => {
    try {
        if (!isGroup) return reply("*üìõ ·¥õ ú…™s ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ö ·¥Ñ·¥Ä…¥ ·¥è…¥ ü è  ô·¥á ·¥ús·¥á·¥Ö …™…¥ …¢ Ä·¥è·¥ú·¥òs.*");
        
        const botOwner = conn.user.id.split(":")[0]; // Extract bot owner's number
        const senderJid = senderNumber + "@s.whatsapp.net";

        if (!groupAdmins.includes(senderJid) && senderNumber !== botOwner) {
            return reply("*üìõ œÉ…¥‚Ñì è g ÄœÉ·¥ú·¥ò Œ±‚àÇ–ºŒπ…¥s œÉ Ä —Ç–Ω—î œÉœâ…¥—î Ä ·¥ÑŒ±…¥ ·¥ús—î —Ç–ΩŒπ—ï ·¥ÑœÉ–º–ºŒ±…¥‚àÇ.*");
        }

        // Ensure group metadata is fetched properly
        let groupInfo = await conn.groupMetadata(from).catch(() => null);
        if (!groupInfo) return reply("‚ùå Failed to fetch group information.");

        let groupName = groupInfo.subject || "Unknown Group";
        let totalMembers = participants ? participants.length : 0;
        if (totalMembers === 0) return reply("‚ùå No members found in this group.");

        let emojis = ['‚îÅÔπùÃ£◊Ñü©∞Õú÷º◊ÑÃ∏Ã∂Ôπû', 'üß≠·©®‚îÄ', '‚îÅ ‚ú¶ ‚Éûüåñ', '‚îÅ ‚ú¶ ‚Éûü•Æ·©ß·©ô·©™·©©Ã∂Ã∑  Õü Õü Õü Õü', '‚îÅ ‚ú¶ ‚Éûüè¥‚Äç‚ò†Ô∏è‚Äå'];
        let randomEmoji = emojis[Math.floor(Math.random() * emojis.length)];

        // Proper message extraction
        let message = body.slice(body.indexOf(command) + command.length).trim();
        if (!message) message = "ùêñŒ±ùóÑùñæ ùêîœÅ ùêÑùóèùñæùóãùóí‚±∫êì£ùñæ"; // Default message

        let teks = `*ùêÜùóãñπ≠◊Åùóéùóâ: ${groupName}*\n*ùêåùñæùóÜùñªùñæùóã: ${totalMembers}*\n*ùêåùñæùóåùóåùñ∫ùóÄùñæ: ${message}*\n\n*(‚ñá‚ñá) üíÆ Ã∏Ã∑Ã∂   Ÿò „Äî ùêìùñ∫ùóÄùóÖùïöÕúùóåùóç „Äï ‚Äè‚Äè‚Äé‚Äé‚ïº‚îÄ‚îÄ‚ïÆ*\n`;

        for (let mem of participants) {
            if (!mem.id) continue; // Prevent undefined errors
            teks += `*${randomEmoji}* @${mem.id.split('@')[0]}\n`;
	}

        conn.sendMessage(from, { text: teks, mentions: participants.map(a => a.id) }, { quoted: mek });

    } catch (e) {
        console.error("TagAll Error:", e);
        reply(`‚ùå *Error Occurred !!*\n\n${e.message || e}`);
    }
})
